
simple-loop:     file format elf64-littleriscv
simple-loop
architecture: riscv:rv64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000000100b0

Program Header:
    LOAD off    0x0000000000000000 vaddr 0x0000000000010000 paddr 0x0000000000010000 align 2**12
         filesz 0x000000000000013c memsz 0x000000000000013c flags r-x
    LOAD off    0x0000000000000140 vaddr 0x0000000000011140 paddr 0x0000000000011140 align 2**12
         filesz 0x0000000000000000 memsz 0x0000000000000010 flags rw-

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         0000005c  00000000000100b0  00000000000100b0  000000b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .eh_frame     0000002c  0000000000010110  0000000000010110  00000110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .bss          00000010  0000000000011140  0000000000011140  00000140  2**3
                  ALLOC
  3 .comment      00000012  0000000000000000  0000000000000000  0000013c  2**0
                  CONTENTS, READONLY
  4 .riscv.attributes 00000026  0000000000000000  0000000000000000  0000014e  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000000100b0 l    d  .text	0000000000000000 .text
0000000000010110 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000011140 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 l    d  .riscv.attributes	0000000000000000 .riscv.attributes
0000000000000000 l    df *ABS*	0000000000000000 simple-loop.cpp
000000000001193c g       *ABS*	0000000000000000 __global_pointer$
000000000001113c g       .eh_frame	0000000000000000 __SDATA_BEGIN__
0000000000000000         *UND*	0000000000000000 ntry=main
0000000000011150 g       .bss	0000000000000000 __BSS_END__
000000000001113c g       .bss	0000000000000000 __bss_start
00000000000100b0 g     F .text	000000000000005c main
0000000000011140 g     O .bss	0000000000000010 frame_buffer
000000000001113c g       .eh_frame	0000000000000000 __DATA_BEGIN__
000000000001113c g       .eh_frame	0000000000000000 _edata
0000000000011150 g       .bss	0000000000000000 _end



Disassembly of section .text:

00000000000100b0 <main>:
   100b0:	ff010113          	addi	sp,sp,-16
   100b4:	00012623          	sw	zero,12(sp)
   100b8:	00c12703          	lw	a4,12(sp)
   100bc:	00300793          	li	a5,3
   100c0:	04e7e063          	bltu	a5,a4,10100 <main+0x50>
   100c4:	00011637          	lui	a2,0x11
   100c8:	ff5636b7          	lui	a3,0xff563
   100cc:	14060613          	addi	a2,a2,320 # 11140 <frame_buffer>
   100d0:	41268693          	addi	a3,a3,1042 # ffffffffff563412 <__global_pointer$+0xffffffffff551ad6>
   100d4:	00300593          	li	a1,3
   100d8:	00c12783          	lw	a5,12(sp)
   100dc:	00c12703          	lw	a4,12(sp)
   100e0:	02079513          	slli	a0,a5,0x20
   100e4:	0017071b          	addiw	a4,a4,1
   100e8:	00e12623          	sw	a4,12(sp)
   100ec:	01e55793          	srli	a5,a0,0x1e
   100f0:	00c12703          	lw	a4,12(sp)
   100f4:	00f607b3          	add	a5,a2,a5
   100f8:	00d7a023          	sw	a3,0(a5)
   100fc:	fce5fee3          	bgeu	a1,a4,100d8 <main+0x28>
   10100:	00000513          	li	a0,0
   10104:	01010113          	addi	sp,sp,16
   10108:	00008067          	ret
